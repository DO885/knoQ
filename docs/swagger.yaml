openapi: '3.0.2'

info:
  title: traP Room
  description: |
    This is a sample Room server. 
  version: 1.0.0

servers:
  - url: http://develop.room.sysad.trap.show/
    description: Development server

tags:
  - name: rooms
    description: traP本体の部屋使用状況
  - name: reservations
    description: 予約
  - name: groups
    description: グループの情報
  - name: users
    description: ユーザー

paths:
  /rooms:
    post:
      tags:
        - rooms
      summary: traPで確保した部屋の情報追加 (使わない)
      description: 管理者権限が必要
      operationId: addrooms
      parameters:
        - in: body
          name: body
          description: 確保した部屋の情報
          required: true
          schema:
            type: object
            properties:
              place:
                type: string
                example: S516
              date:
                type: string
                example: "2018/08/08"
              time_start:
                type: string
                example: "17:30"
              time_end:
                type: string
                example: "20:00"
      responses:
        201:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/room'
        403:
          description: Forbidden(管理者でない)
        400:
          description: Bad Request
    get:
      tags:
        - rooms
      summary: traPで確保した進捗部屋の情報を取得
      operationId: getrooms
      parameters:
        - name: id
          in: query
          description: idで取得
          required: false
          schema:
            type: integer
            format: int64
        - name: date_begin
          in: query
          description: 特定の日からのみにする。(inclusive)(2017-07-21とか)
          required: false
          schema:
            type: string
            format: date
        - name: date_end
          in: query
          description: 特定の日からのみにする。(inclusive)(2017-07-21とか)
          required: false
          schema:
            type: string
            format: date
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/room'
  /rooms/{roomId}:
    delete:
      tags:
      - rooms
      summary: traPで確保した部屋の情報を削除
      description: 
        管理者権限が必要
        (関連する予約を削除する)
        エラーを出して削除を促す
      operationId: deleterooms
      parameters:
      - name: roomId
        in: path
        description: 削除する情報のID
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
        403:
          description: Forbidden(管理者でない)
        400:
          description: Bad Request
  /rooms/all:
    post:
      tags:
      - rooms
      summary: traPで確保した部屋の情報追加
      description: 管理者権限が必要
        Googleカレンダーから今日から100件取得する
      operationId: addAllrooms
      responses:
        201:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/room'
        403:
          description: Forbidden(管理者でない)
  /reservations:
    get:
      tags:
      - reservations
      summary: 使用宣言の情報を取得
      #description: 
      operationId: getreservations
      parameters:
        - name: id
          in: query
          description: idで検索
          required: false
          schema:
            type: integer
            format: int64
        - name: name
          in: query
          description: 名前で検索(いい感じに)
          required: false
          schema:
            type: string
        - name: traQID
          in: query
          description: 特定のuserが所属するグループのみにする。
          required: false
          schema:
            type: integer
            format: int64
        - name: groupid
          in: query
          description: 特定のグループのみにする。(IDにするか名前にするかは検討)
          required: false
          schema:
            type: integer
            format: int64
        - name: roomid
          in: query
          description: 被り情報を取りたい(IDにするか名前にするかは検討)
          required: false
          schema:
            type: integer
            format: int64
        - name: date_begin
          in: query
          description: 特定の日からのみにする。(inclusive)(2017-07-21とか)
          required: false
          schema:
            type: string
            format: date
        - name: date_end
          in: query
          description: 特定の日からのみにする。(inclusive)(2017-07-21とか)
          required: false
          schema:
            type: string
            format: date
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/reservation'
    post:
      tags:
      - reservations
      summary: 部屋の使用宣言を行う
      #description: 
      operationId: addreservations
      parameters:
      - in: body
        name: body
        description: 使用宣言の情報
        required: true
        schema:
          type: object
          properties:
            name:
              type: string
              example: 第n回進捗回
            descirption:
              type: string
              example: 第n回の進捗会です。
            group_id:
              type: integer
              format: int64
              example: 3
            room_id:
                type: integer
                format: int64
                example: 1
            time_start:
              type: string
              example: "17:00"
            time_end:
              type: string
              example: "20:00"
      responses:
        201:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reservation'
        403:
          description: Forbidden
        400:
          description: Bad Request
  /reservations/{reservationid}:
    patch:
      tags:
      - reservations
      summary: 部屋の使用宣言を更新(roomid, timestart, timeendのみを変更)
      description: 
        作成者のみ
      operationId: updatereservations
      parameters:
        - name: reservationid
          in: path
          description: 変更する情報のID
          required: true
          schema:
            type: integer
            format: int64
        - in: body
          name: body
          description: 使用宣言の情報
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
                example: 第n回進捗回
              descirption:
                type: string
                example: 第n回の進捗会です。
              room_id:
                type: integer
              time_start:
                type: string
                example: "18:00"
              time_end:
                type: string
                example: "20:00"
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reservation'
        403:
          description: Forbidden
        400:
          description: Bad Request
    delete:
      tags:
        - reservations
      summary: 使用宣言を削除
      description: 作成者のみ
      operationId: deleteRreservations
      parameters:
      - name: reservationid
        in: path
        description: 削除する情報のID
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
        403:
          description: Forbidden(所属ユーザーで無い)
        404:
          description: Not Found
  /groups:
    get:
      tags:
      - groups
      summary: グループを全て取得
      description: ログインユーザーなら所属していなくても取得可能にしておく
      operationId: getGroup
      parameters:
        - name: id
          in: query
          description: idで取得
          required: false
          schema:
            type: integer
            format: int64
        - name: name
          in: query
          description: nameで取得
          required: false
          schema:
            type: string
        - name: traQID
          in: query
          description: 特定のuserが所属するグループのみにする。(IDにするか名前にするかは検討)
          required: false
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group'
        400:
          description: Bad Request
    post:
      tags:
      - groups
      summary: Create group
      operationId: createGroup
      parameters:
      - in: body
        name: body
        description: Created group object
        required: true
        schema:
          type: object
          properties:
            name:
              type: string
              example: room
            description:
              type: string
              example: Sysad班room開発グループ
            members:
              type: array
              items:
                type: object
                properties:
                  traq_id:
                    type: string
                    example: fuji
      responses:
        201:
          description: successful operation
          content:
            application/json: 
              schema:
                $ref: '#/components/schemas/Group'
        400:
          description: Bad Request
  /groups/{groupid}:
    patch:
      tags:
      - groups
      summary: グループメンバー、グループ名、詳細を更新
      description: 作成者のみ変更可能
      operationId: updateGroup
      parameters:
      - name: groupid
        in: path
        description: 変更する情報のID
        required: true
      - name: body
        in: path
        description: グループの情報
        required: true
        schema:
          type: object
          properties:
            name:
              type: string
              example: room
            description:
              type: string
              example: Sysad班room開発グループ
            members:
              type: array
              items:
                $ref: '#/components/schemas/user'
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
        400:
          description: Bad Request
        403:
          description: 作成者ではない
    delete:
      tags:
        - groups
      summary: Delete group
      description: 管理者権限が必要(削除せずとも放置すれば問題無いということにしておく)
        削除されたgroupの予約
      operationId: deleteGroup
      parameters:
        - name: groupid
          in: path
          description: The name that needs to be deleted
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: successful operation
        400:
          description: Invalid groupname supplied
        403:
          description: Forbidden(非管理者)
        404:
          description: Groupid not found
  /users:
    get:
      tags:
        - users
      summary: すべてのユーザーを取得
      description: メンバー検索のとき呼ぶ
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/user'
  /users/me:
    get:
      tags:
        - users
      summary: クライアントのtraQIDを取得
      description: クライアントを識別するために最初に呼ばれる
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'

components:
  schemas:
    room:
      type: object
      required:
        - place
        - date
      properties:
        id:
          type: integer
          format: int64
          example: 1
        place:
          type: string
          example: S516
        date:
          type: string
          format: date
          example: "2019-07-03T00:00:00+09:00"
        time_start:
          type: string
          format: time
          example: "17:30:00" #2017-07-21T17:32:28Z
          #description: (https://tools.ietf.org/html/rfc3339#section-5.6 )
        time_end:
          type: string
          format: time
          example: "20:00:00" #2017-07-21T17:32:28Z 
          #description: (https://tools.ietf.org/html/rfc3339#section-5.6 )
    reservation:
      type: object
      required:
        - name
        - date
        - room_id
        - group_id
        - time_start
        - time_end
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: 第n回進捗回
        descirption:
          type: string
          example: 第n回の進捗会です。
        group: 
          $ref: '#/components/schemas/Group'
        room:
          $ref: '#/components/schemas/room'
        date:
          type: string
          format: date
          example: "2019-07-03T00:00:00+09:00"
        time_start:
          type: string
          format: time
          example: "18:00:00"
        time_end:
          type: string
          format: time
          example: "19:00:00"
        created_by:
          type: string
          example: "fuji"
    Group:
      type: object
      required: 
        - name
        - members
      properties:
        id:
          type: integer
          format: int64
          example: 3
        name:
          type: string
          example: room
        description:
          type: string
          example: Sysad班room開発グループ
        members:
          type: array
          items:
            $ref: '#/components/schemas/user'
        created_by:
          type: string
          example: "fuji"
    user:
      type: object
      properties:
        traq_id:
          type: string
          example: fuji
        admin:
          type: boolean
          example: false
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
